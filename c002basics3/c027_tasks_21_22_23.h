#include <stdio.h>
#include <stdlib.h>

void t22_1(int *a, int *b) {
    (*a)++;
    (*b) *= 2;
}

void t22_2(int *a, int *b) {
    int t = *a;
    *a = *b;
    *b = t;
}

void t22_2_no_3rd_var(int *a, int *b) {
    // без третьей переменной
    *a += *b; // 4 + 2 = 6
    *b = *a - *b; // 6 - 4 = 2
    *a = *a - *b; // 6 - 2 = 4
}



struct SPoint { // новая структура данных: точка
    int x; // поле, координата x
    int y; // поле, координата y
    int array[7]; // задание 1
};

typedef struct SPoint TPoint; // тип данных на основе созданной структуры

void showPoint(TPoint p)
{
    printf("x=%d, y=%d\n", p.x, p.y);

    printf("array: "); // задание 1
    for (size_t i = 0; i < 7; i++) // задание 1
    {
        printf("%d ", p.array[i]);
    }
    printf("\n"); // задание 1
}

void c027_tasks_21_22_23() {
    /*
    Задание 21.1:
    Создайте 2 переменные вещественного типа. Далее создайте 1 указатель на переменную вещественного типа.
    Измените значения обоих переменных с помощью этого указателя. После чего выведете обе переменные на экран.
    */
    double var1 = 1.23;
    double var2 = 2.34;
    printf("%0.2f, %0.2f\n", var1, var2);

    double *varPointer = NULL;

    varPointer = &var1;
    *varPointer = 4.56;

    varPointer = &var2;
    *varPointer = 5.67;
    printf("%0.2f, %0.2f\n", var1, var2);



    /*
    Задание 22.1:
    Создайте две переменные целого типа, присвойте им значения и отобразите на экране.
    Напишите процедуру, которая увеличивает значение первого входного параметра на 1, а второго в 2 раза.
    С помощью этой процедуры измените значения двух ваших переменных.
    */
    int a = 1;
    int b = 2;

    t22_1(&a, &b);
    printf("%d, %d\n", a, b);



    /*
    Задание 22.2:
    Измените процедуру из первого задания так,
    чтобы она меняла местами значения двух входных переменных.
    */
    t22_2(&a, &b);
    printf("%d, %d\n", a, b);
    t22_2_no_3rd_var(&a, &b);
    printf("%d, %d\n", a, b);



    /*
    Добавьте е структуру еще одну любую переменную (можно массив).
    В процедуре showPoint добавьте вывод новой переменной на экран.
    Добавьте в процедуру setPoint входной параметр такого же типа
    и с помощью него заполните новую переменную в структуре.
    */
    TPoint point; // переменная типа TPoint
    point.x = 3;
    point.y = 7;
    printf("x=%d, y=%d\n", point.x, point.y);

    showPoint(point);

    int arr[7] = {1,2,3,4,5,6,7};
    setPoint(pointPtr, 7, 9, arr);
    showPoint(*pointPtr);

}